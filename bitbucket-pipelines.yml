image: node:12.13.0

clone:
  depth: full              # SonarCloud scanner needs the full history to assign issues properly
options:
  size: 2x
  docker: true
definitions:
  caches:
    sonar: ~/.sonar/cache  # Caching SonarCloud artifacts will speed up your build
  services:
    docker:
      memory: 2048
  steps:
    - step: &build-app
        name: "Build"
        image: node:14.15.4-alpine3.12
        script:
          #- unset NPM_CONFIG_USER # solving the problem with installing the cypress - https://github.com/cypress-io/cypress/issues/15025
          - yarn install
          - yarn run storybook:build
        artifacts:
          - storybook-static/**

    - step: &sonarcloud
        name: "Sonarcloud"
        script:
          - pipe: sonarsource/sonarcloud-scan:1.2.1
          - pipe: sonarsource/sonarcloud-quality-gate:0.1.4

    - step: &deploy-app
        name: "Deploy to Environment"
        image: atlassian/pipelines-awscli
        script:
          - source infra/config-files/${CONFIG_FILE_SUFFIX}

          - chmod +x infra/scripts/*
          - export CERTIFICATE_ARN=`./infra/scripts/getCertificate.sh us-east-1 *.${HOSTED_ZONE_NAME:0:-1}`

          - aws cloudformation deploy --region $REGION --stack-name ${CLOUDFORMATION_STACKNAME}-cloudfront --capabilities CAPABILITY_NAMED_IAM --no-fail-on-empty-changeset --template-file infra/cloudformation/service-cloudfront.yml --parameter-overrides CNAME=$SITE_URL CertificateArn=$CERTIFICATE_ARN ProjectName=$APP_NAME ClusterName=$CLUSTER_NAME PrefixName=$PREFIX_NAME
          - echo "aws ssm get-parameter --region $REGION --with-decryption --name /ECS-CLUSTER/${CLUSTER_NAME}/${APP_NAME}/DISTRIBUTION_ID --output text --query Parameter.Value"
          - echo "aws ssm get-parameter --region $REGION --with-decryption --name /ECS-CLUSTER/${CLUSTER_NAME}/${APP_NAME}/AWS_S3 --output text --query Parameter.Value"
          - export DISTRIBUTION_ID=`aws ssm get-parameter --region $REGION --with-decryption --name /ECS-CLUSTER/${CLUSTER_NAME}/${APP_NAME}/DISTRIBUTION_ID --output text --query Parameter.Value`
          - export AWS_S3="`aws ssm get-parameter --region $REGION --with-decryption --name /ECS-CLUSTER/${CLUSTER_NAME}/${APP_NAME}/AWS_S3 --output text --query Parameter.Value`"
          - aws s3 sync --delete storybook-static/ s3://$AWS_S3
          - aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths /*

    - step: &build-and-push-new-version-of-services
        name: Push services to npm
        script:
          - yarn install
          - yarn run build:services
          - yarn run pack:services
          - pipe: atlassian/npm-publish:0.3.2
            variables:
              NPM_TOKEN: $NPM_TOKEN
              FOLDER: 'packages/react-common-services'
              EXTRA_ARGS: '--access public'

    - step: &build-and-push-new-version-of-components
        name: Push components to npm
        script:
          - yarn install
          - yarn run build:components
          - yarn run pack:components
          - pipe: atlassian/npm-publish:0.3.2
            variables:
              NPM_TOKEN: $NPM_TOKEN
              FOLDER: 'packages/react-common-components'
              EXTRA_ARGS: '--access public'

pipelines:
  custom:
    publish-services:
      - step: *build-and-push-new-version-of-services
    publish-components:
      - step: *build-and-push-new-version-of-components
    Deploy to dev1:
      - step: *build-app
      - step:
          <<: *deploy-app
          deployment: dev1
    Deploy to stage1:
      - step: *build-app
      - step:
          <<: *deploy-app
          deployment: stage1
    Deploy to us1:
      - step: *build-app
      - step:
          <<: *deploy-app
          deployment: us1
    Analyze sonarcloud:
      - step: *sonarcloud
